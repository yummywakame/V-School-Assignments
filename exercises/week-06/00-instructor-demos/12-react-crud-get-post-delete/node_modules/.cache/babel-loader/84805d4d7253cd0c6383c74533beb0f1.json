{"ast":null,"code":"import _defineProperty from \"/Users/omeiring/dev/assignments/exercises/week-06/00-instructor-demos/12-react-crud-get-post-delete/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/omeiring/dev/assignments/exercises/week-06/00-instructor-demos/12-react-crud-get-post-delete/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/omeiring/dev/assignments/exercises/week-06/00-instructor-demos/12-react-crud-get-post-delete/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/omeiring/dev/assignments/exercises/week-06/00-instructor-demos/12-react-crud-get-post-delete/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/omeiring/dev/assignments/exercises/week-06/00-instructor-demos/12-react-crud-get-post-delete/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/omeiring/dev/assignments/exercises/week-06/00-instructor-demos/12-react-crud-get-post-delete/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/omeiring/dev/assignments/exercises/week-06/00-instructor-demos/12-react-crud-get-post-delete/src/App.js\";\nimport React, { Component } from 'react';\nimport TodoList from './components/TodoList.js';\nimport AddTodoForm from './components/AddTodoForm.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.handleChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n    };\n\n    _this.handleDelete = function (_id) {\n      // DELETE\n      // axios.delete a specific Todo via it's ID\n      axios.delete(\"https://api.vschool.io/attila/todo/\".concat(_id)).then(function (response) {\n        _this.setState(function (prevState) {\n          return {\n            // Take the previous array of todos, and only return\n            // todos that don't have the _id of the deleted one\n            todos: prevState.todos.filter(function (todo) {\n              return todo._id !== _id;\n            })\n          };\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    };\n\n    _this.state = {\n      todos: [],\n      title: '',\n      description: '',\n      price: '',\n      imgUrl: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getTodos();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(AddTodoForm, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        title: this.state.title,\n        description: this.state.description,\n        price: this.state.price,\n        imgUrl: this.state.imgUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(TodoList, {\n        todos: this.state.todos,\n        handleDelete: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // GET - Map out todos\n// TodoList - list out Todos\n// Todo     - Singular Todo that is mapped out in TodoList component\n// App -\n// componentDidMount\n// add place for todos in state\n// componentWillUnmount\n// window.eventListeners\n// setInterval, setTimeout\n// POST - Add new Todo\n// <AddTodoForm />\n// state properties for input values\n// handleChange, handleSubmit","map":{"version":3,"sources":["/Users/omeiring/dev/assignments/exercises/week-06/00-instructor-demos/12-react-crud-get-post-delete/src/App.js"],"names":["React","Component","TodoList","AddTodoForm","App","handleChange","e","target","name","value","setState","handleSubmit","preventDefault","handleDelete","_id","axios","delete","then","response","prevState","todos","filter","todo","catch","error","console","log","state","title","description","price","imgUrl","getTodos"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;IAGMC,G;;;;;AACF,iBAAa;AAAA;;AAAA;;AACT;;AADS,UAiBbC,YAjBa,GAiBE,UAAAC,CAAC,EAAI;AAAA,sBACQA,CAAC,CAACC,MADV;AAAA,UACRC,IADQ,aACRA,IADQ;AAAA,UACFC,KADE,aACFA,KADE;;AAEhB,YAAKC,QAAL,qBACKF,IADL,EACYC,KADZ;AAGH,KAtBY;;AAAA,UAwBbE,YAxBa,GAwBE,UAAAL,CAAC,EAAI;AAChBA,MAAAA,CAAC,CAACM,cAAF;AAEH,KA3BY;;AAAA,UA6BbC,YA7Ba,GA6BE,UAACC,GAAD,EAAS;AACpB;AACA;AACAC,MAAAA,KAAK,CAACC,MAAN,8CAAmDF,GAAnD,GAA0DG,IAA1D,CAA+D,UAAAC,QAAQ,EAAI;AACvE,cAAKR,QAAL,CAAc,UAAAS,SAAS,EAAI;AACvB,iBAAO;AACH;AACA;AACAC,YAAAA,KAAK,EAAED,SAAS,CAACC,KAAV,CAAgBC,MAAhB,CAAuB,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAACR,GAAL,KAAaA,GAAjB;AAAA,aAA3B;AAHJ,WAAP;AAKH,SAND;AAOH,OARD,EAQGS,KARH,CAQS,UAAAC,KAAK;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,OARd;AASH,KAzCY;;AAET,UAAKG,KAAL,GAAa;AACTP,MAAAA,KAAK,EAAE,EADE;AAETQ,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,WAAW,EAAE,EAHJ;AAITC,MAAAA,KAAK,EAAE,EAJE;AAKTC,MAAAA,MAAM,EAAE;AALC,KAAb;AAFS;AASZ;;;;wCAEkB;AAChB,WAAKC,QAAL;AACF;;;6BA8BO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AACI,QAAA,YAAY,EAAE,KAAK3B,YADvB;AAEI,QAAA,YAAY,EAAE,KAAKM,YAFvB;AAGI,QAAA,KAAK,EAAE,KAAKgB,KAAL,CAAWC,KAHtB;AAII,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE,WAJ5B;AAKI,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,KALtB;AAMI,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWI,MANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAQI,oBAAC,QAAD;AACI,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWP,KADtB;AAEI,QAAA,YAAY,EAAE,KAAKP,YAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,CADJ;AAcH;;;;EA3DaZ,S;;AA8DlB,eAAeG,GAAf,C,CAQA;AACI;AACA;AAEA;AACI;AACA;AACA;AACI;AACA;AAEZ;AACI;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\nimport TodoList from './components/TodoList.js'\nimport AddTodoForm from './components/AddTodoForm.js'\n\n\nclass App extends Component {\n    constructor(){\n        super()\n        this.state = {\n            todos: [],\n            title: '',\n            description: '',\n            price: '',\n            imgUrl: ''\n        }\n    }\n\n    componentDidMount(){\n       this.getTodos()\n    }\n\n    \n\n    handleChange = e => {\n        const { name, value } = e.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        \n    }\n\n    handleDelete = (_id) => {\n        // DELETE\n        // axios.delete a specific Todo via it's ID\n        axios.delete(`https://api.vschool.io/attila/todo/${_id}`).then(response => {\n            this.setState(prevState => {\n                return {\n                    // Take the previous array of todos, and only return\n                    // todos that don't have the _id of the deleted one\n                    todos: prevState.todos.filter(todo => todo._id !== _id)\n                }\n            })    \n        }).catch(error => console.log(error))\n    }\n\n    render(){\n        return (\n            <div>\n                <AddTodoForm \n                    handleChange={this.handleChange}\n                    handleSubmit={this.handleSubmit} \n                    title={this.state.title}\n                    description={this.state.description}\n                    price={this.state.price}\n                    imgUrl={this.state.imgUrl} />\n                <TodoList \n                    todos={this.state.todos}\n                    handleDelete={this.handleDelete}/>\n            </div>\n        )\n    }\n}\n\nexport default App\n\n\n\n\n\n\n\n// GET - Map out todos\n    // TodoList - list out Todos\n    // Todo     - Singular Todo that is mapped out in TodoList component\n\n    // App -\n        // componentDidMount\n        // add place for todos in state\n        // componentWillUnmount\n            // window.eventListeners\n            // setInterval, setTimeout\n\n// POST - Add new Todo\n    // <AddTodoForm />\n    // state properties for input values\n    // handleChange, handleSubmit"]},"metadata":{},"sourceType":"module"}